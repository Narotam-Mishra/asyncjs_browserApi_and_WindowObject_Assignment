
Q5. List and briefly explain some common Browser APIs available to JavaScript developers.

# Ans - JavaScript developers have access to various Browser APIs (Application Programming Interfaces) that enable interaction with different aspects of web browsers and web environments. 

# Here are some common Browser APIs :-

1). DOM (Document Object Model) API :-

# Purpose: Allows manipulation of HTML and XML documents.
# Usage: Developers can use methods like getElementById, querySelector, createElement, and properties like innerHTML to interact with and manipulate the structure and content of web documents.

2). Event API :-

# Purpose: Handles user interactions and events on web pages.
# Usage: Developers can use event listeners (addEventListener) to respond to user actions such as clicks, keypresses, and mouse movements.

3). AJAX (Asynchronous JavaScript and XML) API :-

# Purpose: Enables asynchronous data retrieval from a server without requiring a full page reload.
# Usage: Developers commonly use the XMLHttpRequest object or the more modern fetch API to make asynchronous HTTP requests.

4). LocalStorage and SessionStorage API :-

# Purpose: Allows storing key-value pairs locally on the client side.
# Usage: Developers can use localStorage and sessionStorage to store data persistently (across browser sessions) or temporarily (within a session).

5). Web Storage API :-

# Purpose: Provides a simple key-value store for persisting data.
# Usage: Developers can use localStorage and sessionStorage for larger amounts of data compared to cookies, and the data is not sent to the server with every HTTP request.

6). WebSockets API :-

# Purpose: Enables bidirectional communication between the browser and a server over a single, long-lived connection.
# Usage: Developers can use the WebSocket object to establish a WebSocket connection and exchange messages in real-time.

7). Geolocation API :-

# Purpose: Provides information about the user's geographical location.
# Usage: Developers can use methods like navigator.geolocation.getCurrentPosition to obtain the user's current position.

8). Canvas API :-

# Purpose: Allows drawing graphics, shapes, and images dynamically on the web page.
# Usage: Developers can use the <canvas> element and the associated JavaScript API to create interactive and dynamic visual content.

9). WebRTC (Web Real-Time Communication) API :-

# Purpose: Facilitates real-time communication between browsers, enabling features like video chat and peer-to-peer file sharing.
# Usage: Developers can use the WebRTC API to establish audio and video communication between browsers without the need for plugins.

10). Notification API :-

# Purpose: Enables displaying native notifications to the user.
# Usage: Developers can use the Notification interface to request and display notifications, improving user engagement.

# These APIs empower developers to create rich and interactive web applications by interacting with various aspects of the browser environment and enhancing user experiences.